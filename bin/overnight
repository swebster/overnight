#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'overnight/nightscout'
require 'rufus-scheduler'

nightscout = Overnight::Nightscout.new
scheduler = Rufus::Scheduler.new
columns = %w[LocalDate Time NsTime BgTime BG Min Max IOB COB]
puts format('%-10 8 8 8 4 4 4 5 4s'.gsub(' ', 's %-'), *columns)

Signal.trap('INT') do
  puts
  exit 130
end

scheduler.every '5m', first: :now do
  time_started = Time.now
  data = nightscout.get
  current = data[:entry].first
  loop = data[:device_status].first
  status = data[:status]

  min_max = loop.predicted.first(12).minmax
  s = time_started.localtime.strftime('%F %T ')
  s << [status, current].map { |x| x.time.localtime.strftime('%T ') }.join
  s << [current, *min_max].map { |y| status.format(y.glucose) }.join(' ')
  puts s << format(' %5.2f %4.1f', loop.iob, loop.cob)
end

scheduler.join
