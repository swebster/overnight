version: '3'

vars:
  OVERNIGHT: swebster/overnight
  PODLET: ghcr.io/containers/podlet:v0.3.0
  IMAGE_FORMAT: '{{`{{.Repository}}:{{.Tag}}`}}'
  IMAGE_OPTIONS: --filter dangling=false --format {{.IMAGE_FORMAT}}

run: when_changed

tasks:
  config:local:
    desc: Create a config file for custom settings
    cmds:
      - ./configure_local.sh
    interactive: true
    sources:
      - configure_local.sh
    generates:
      - .env.local

  config:secrets:
    desc: Create a config file for sensitive data
    cmds:
      - ./configure_secrets.sh
    interactive: true
    sources:
      - configure_secrets.sh
    generates:
      - .env.secrets

  podman:build:
    desc: Build the relevant container image
    vars:
      TARGET: 'localhost/{{.OVERNIGHT}}:latest'
    cmds:
      - podman build . -t {{.OVERNIGHT}}
    sources:
      - Gemfile*
      - bin/overnight
      - lib/**/*.rb
      - overnight.gemspec
    status:
      - podman images {{.IMAGE_OPTIONS}} | grep -qx {{.TARGET}}

  podman:secrets:
    desc: Store sensitive config data appropriately
    deps: [config:secrets]
    vars:
      MISSING_SECRETS:
        sh: >
          awk -F= '{print tolower($1)}' .env.secrets.template |
            xargs -I{} sh -c 'podman secret exists {} || printf "%s\n" {}'
    cmds:
      - for: { var: MISSING_SECRETS }
        cmd: >
          grep -iq {{.ITEM}} .env.secrets &&
          awk -F= '$1 == "{{upper .ITEM}}" {printf("%s", $2)}' .env.secrets |
            podman secret create {{.ITEM}} -
    status:
      - test {{len .MISSING_SECRETS}} -eq 0

  podman:run:
    desc: Run overnight in a container
    deps: [config:local, podman:secrets, podman:build]
    vars:
      ENV_OPTIONS:
        sh: ./extract_env.sh
      TARGET: 'localhost/{{.OVERNIGHT}}:latest'
    cmds:
      - podman run -it --rm {{.ENV_OPTIONS}} {{.OVERNIGHT}} {{.CLI_ARGS}}
    status:
      - podman ps --format '{{`{{.Image}}`}}' | grep -qx {{.TARGET}}

  podlet:pull:
    desc: Pull a container image for running podlet
    cmds:
      - podman pull {{.PODLET}}
    status:
      - podman images {{.IMAGE_OPTIONS}} | grep -qx {{.PODLET}}

  podlet:run:
    desc: Generate configuration to run overnight as a systemd service
    deps: [config:local, podlet:pull]
    vars:
      ENV_OPTIONS:
        sh: ./extract_env.sh
    cmds:
      - |
        podman run --rm {{.PODLET}} --install \
          podman run --restart=always {{.ENV_OPTIONS}} {{.OVERNIGHT}} |
          grep -v '^#' > overnight.container
    sources:
      - .env.local
      - extract_env.sh
    generates:
      - overnight.container
