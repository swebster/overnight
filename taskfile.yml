version: '3'

vars:
  IMAGE_NAME: swebster/overnight

run: when_changed

tasks:
  config:local:
    desc: Create a config file for custom settings
    cmds:
      - ./configure_local.sh
    interactive: true
    sources:
      - configure_local.sh
    generates:
      - .env.local

  config:secrets:
    desc: Create a config file for sensitive data
    cmds:
      - ./configure_secrets.sh
    interactive: true
    sources:
      - configure_secrets.sh
    generates:
      - .env.secrets

  podman:build:
    desc: Build the relevant container image
    vars:
      IMAGE_FORMAT: '{{`{{.Repository}}:{{.Tag}}`}}'
      TARGET: 'localhost/{{.IMAGE_NAME}}:latest'
    cmds:
      - podman build . -t {{.IMAGE_NAME}}
    sources:
      - Gemfile*
      - bin/overnight
      - lib/**/*.rb
      - overnight.gemspec
    status:
      - podman images --filter dangling=false --format {{.IMAGE_FORMAT}} | grep -qx {{.TARGET}}

  podman:secrets:
    desc: Store sensitive config data appropriately
    deps: [config:secrets]
    vars:
      MISSING_SECRETS:
        sh: >
          awk -F= '{print tolower($1)}' .env.secrets.template |
            xargs -I{} sh -c 'podman secret exists {} || printf "%s\n" {}'
    cmds:
      - for: { var: MISSING_SECRETS }
        cmd: >
          grep -iq {{.ITEM}} .env.secrets &&
          awk -F= '$1 == "{{upper .ITEM}}" {printf("%s", $2)}' .env.secrets |
            podman secret create {{.ITEM}} -
    status:
      - test {{len .MISSING_SECRETS}} -eq 0

  podman:run:
    desc: Run overnight in a container
    deps: [config:local, podman:secrets, podman:build]
    vars:
      SECRET_OPTS: uid=101,gid=101,mode=0400
      SECRET_ARGS:
        sh: >
          secrets=($(awk -F= '{print tolower($1)}' .env.secrets.template));
          for secret in "${secrets[@]}"; do
            SECRET=$(echo "$secret" | awk '{print toupper($0)}');
            printf "--env ${SECRET}_FILE=/run/secrets/$secret --secret $secret,{{.SECRET_OPTS}} ";
          done
    cmds:
      - podman run -it --rm --env-file .env.local {{.SECRET_ARGS}}{{.IMAGE_NAME}} {{.CLI_ARGS}}
